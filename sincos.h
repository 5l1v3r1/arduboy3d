#ifndef SINCOS_H_
#define SINCOS_H_

#include <avr/pgmspace.h>

static const uint8_t kSinTbl_[256] PROGMEM = {
	0,   1,   3,   4,   6,   7,   9,  10,  12,  14,  15,  17,  18,
   20,  21,  23,  25,  26,  28,  29,  31,  32,  34,  36,  37,  39,
   40,  42,  43,  45,  46,  48,  49,  51,  53,  54,  56,  57,  59,
   60,  62,  63,  65,  66,  68,  69,  71,  72,  74,  75,  77,  78,
   80,  81,  83,  84,  86,  87,  89,  90,  92,  93,  95,  96,  97,
   99, 100, 102, 103, 105, 106, 108, 109, 110, 112, 113, 115, 116,
  117, 119, 120, 122, 123, 124, 126, 127, 128, 130, 131, 132, 134,
  135, 136, 138, 139, 140, 142, 143, 144, 146, 147, 148, 149, 151,
  152, 153, 155, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167,
  168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 181, 182,
  183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
  196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
  209, 210, 211, 211, 212, 213, 214, 215, 216, 217, 217, 218, 219,
  220, 221, 221, 222, 223, 224, 225, 225, 226, 227, 227, 228, 229,
  230, 230, 231, 232, 232, 233, 234, 234, 235, 235, 236, 237, 237,
  238, 238, 239, 239, 240, 241, 241, 242, 242, 243, 243, 244, 244,
  244, 245, 245, 246, 246, 247, 247, 247, 248, 248, 249, 249, 249,
  250, 250, 250, 251, 251, 251, 251, 252, 252, 252, 252, 253, 253,
  253, 253, 254, 254, 254, 254, 254, 254, 255, 255, 255, 255, 255,
  255, 255, 255, 255, 255, 255, 255, 255, 255
};

static uint16_t LookupSin(uint16_t theta) {
  uint8_t angle_in_quadrant = theta & 255;
  // special case for angle 0
  if (angle_in_quadrant == 0) {
    // { 0,  1,  0, -1}[theta >> 6]
    //  00  01  10  11   <- theta & 0xc0
    if (theta & 0x100) {
      return theta & 0x200 ? -256 : 256;
    } else {
      return 0;
    }
  }

  // + - + -  <- table direction
  // + + - -  <- sign
  if (theta & 0x100) {
    angle_in_quadrant = 256 - angle_in_quadrant;
  }
  uint8_t value = pgm_read_byte_near(kSinTbl_ + angle_in_quadrant);
  if (theta & 0x200) {
    return -(int16_t) value;
  } else {
    return (int16_t) value;
  }
}

static void GetSinCos(uint16_t theta,
    int16_t *sin, int16_t *cos) {
  *sin = LookupSin(theta);
  *cos = LookupSin(theta + 0x100);
}

#endif  // SINCOS_H_
